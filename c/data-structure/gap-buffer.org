#+Title: Gap Buffer

考虑文本编辑器内部的buffer如何实现？
最简单的方法是使用单个buffer，每次插入和删除最坏情况要移动n个字符。
如果给每行分配一个buffer，那么每行buffer多大便成了一个问题，当然我们可以在一行的buffer不够的时候重新申请buffer，
拷贝这一行的已有内容，这样的后果是可能造成很大内存碎片。

考虑到使用文本编辑器的时候最常见的操作是在一个位置连续插入多个字符。于是一个实现简单，但是很有效的Gap buffer被发明出来了。
Gap Buffer的意义就如同名字一样，在一个大buffer中留下一个Gap，这样插入的时候直接填充Gap就可以了，不必移动光标后面的所有字符。
删除操作类似，只需要增大Gap即可。当然前面的操作可行的条件是插入，删除都在Gap的位置进行。如果在另一个位置进行，
就需要移动Gap, 移动Gap就需要在Gap的两个Buffer中拷贝内容了。

插入一个字符'd'的过程如下:
#+begin_example
    Gap            Gap
     |  insert 'd'  |
     v              v
abc[   ]xyz   abcd[   ]xyz
#+end_example
Gap Buffer的操作不是最优的，但是实现简单，所以还是值得考虑使用的。想进一步优化编辑操作的时间复杂度，可以使用Rope。
