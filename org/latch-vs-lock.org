#+Title: Latch vs Lock

数据库中有两个相关的概念: latch和lock，它们都和保证某些操作的串行化有关，基本上，可以认为它们都是锁，但是实现上不同，在数据库的领域，latch和lock有特定的含义:

从概念上来讲, lock是指真实存在的数据库对象加的锁，比如对表或某些行加的锁，即包括共享锁，也包括互斥锁。
latch是指数据库内部为了保证安全地访问某些全局对象，而对这些对象加的锁，当然有时latch并不一定就要锁住某个具体的数据结构，可能只是为了保证某些代码段不能并发执行，
latch都是互斥的。

从实现上讲，lock的获取和释放比latch代价大，实现lock通常需要队列，一旦在某个事务中获得了锁，它可能会占有很长时间；
但是latch开销较小，通常用spin lock实现，用来锁住可以快速完成的代码块。
即lock是排队获取资源，但是latch是不停检查资源是否可用, 直到获得为止。
数据库中对全局对象有个专门的称呼，shared global area

还有一个重要的区别，通常一个线程会持有多个lock，但是不会持有多个latch(没有看到明确的说明，但是如果需要同时持有多个latch，肯定就不适合用spin lock的方式实现了).
使用lock要特别小心死锁的问题, 使用latch则较少遇到这个问题。

